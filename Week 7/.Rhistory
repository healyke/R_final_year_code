xpredicts <- dose.p(model_logistic,p=c(ypredicts))
#this just generates a sequence of numbers
ypredicts <- seq(0, 1, 0.01)
xpredicts <- dose.p(model_logistic,p=c(ypredicts))
plot(tox_data$dead/20 ~ (tox_data$dose_percent_venom),
ylab = "Proportion_dead",
xlab = "Dosage",
pch = 16)
lines(unlist(xpredicts), ypredicts)
#this just generates a sequence of numbers
ypredicts <- seq(0, 1, 0.01)
xpredicts <- dose.p(model_logistic,p=c(ypredicts))
plot(tox_data$dead/20 ~ (tox_data$dose_percent_venom),
ylab = "Prob of death",
xlab = "Dosage",
pch = 16)
lines(unlist(xpredicts), ypredicts)
cbind(dead, alive)
cbind($dead, alive)
cbind(tox_data$dead, tox_data$alive)
tox_data <- read.csv("tox_test.csv",
header = T,
sep = ",")
model_logistic <- glm(dead ~ dose_percent_venom,
binomial(link = logit),
data = tox_data)
summary(model_logistic)
#this just generates a sequence of numbers
ypredicts <- seq(0, 1, 0.01)
xpredicts <- dose.p(model_logistic,p=c(ypredicts))
plot(tox_data$dead/20 ~ (tox_data$dose_percent_venom),
ylab = "Probability of death",
xlab = "Dosage",
pch = 16)
lines(unlist(xpredicts), ypredicts)
#this just generates a sequence of numbers
ypredicts <- seq(0, 1, 0.01)
xpredicts <- dose.p(model_logistic,p=c(ypredicts))
plot(dead ~ dose_percent_venom,
ylab = "Probability of death",
xlab = "Dosage",
pch = 16,
data = tox_data)
lines(unlist(xpredicts), ypredicts)
LD50 <- dose.p(model_logistic,p=c(0.5))
LD50
LD50 <- dose.p(model_logistic,p=c(0.5))
LD50 <- dose.p(model_logistic,p=c(0.5))
LD50 <- dose.p(model_logistic,p=c(0.5))
#this just generates a sequence of numbers
ypredicts <- seq(0, 1, 0.01)
xpredicts <- dose.p(model_logistic,p=c(ypredicts))
plot(dead ~ dose_percent_venom,
ylab = "Probability of death",
xlab = "Dosage (% of crude venom)",
pch = 16,
data = tox_data)
lines(unlist(xpredicts), ypredicts)
LD50 <- dose.p(model_logistic,p=c(0.5))
LD50
iris_data <- iris
plot(iris_data$Sepal.Width ~ iris_data$Sepal.Length,
pch = 16,
bty = "n",
xlab = "Sepal Length",
ylab = "Sepal Width")
mod_1 <- lm(Sepal.Width ~ Sepal.Length,
data = iris_data)
summary(mod_1)
plot(iris_data$Sepal.Width ~ iris_data$Sepal.Length,
pch = 16,
bty = "n",
xlab = "Sepal Length",
ylab = "Sepal Width")
abline(3.42, -0.06)
plot(iris_data$Sepal.Width ~ iris_data$Sepal.Length,
bty = "n",
xlab = "Sepal Length",
ylab = "Sepal Width",
col = "white")
# colour the points for setosa
points(iris_data[iris_data$Species == "setosa", "Sepal.Width"] ~
iris_data[iris_data$Species == "setosa", "Sepal.Length"],
col = "cyan3",
pch = 16)
# colour the points for versicolor
points(iris_data[iris_data$Species == "versicolor", "Sepal.Width"] ~
iris_data[iris_data$Species == "versicolor", "Sepal.Length"],
col = "grey",
pch = 16)
# colour the points for virginica
points(iris_data[iris_data$Species == "virginica", "Sepal.Width"] ~
iris_data[iris_data$Species == "virginica", "Sepal.Length"],
col = "green4",
pch = 16)
levels(iris_data$Species)
mod_2 <- lm(Sepal.Width ~ Sepal.Length + Species,
data = iris_data)
summary(mod_2)
plot(iris_data$Sepal.Width ~ iris_data$Sepal.Length,
bty = "n",
xlab = "Sepal Length",
ylab = "Sepal Width",
col = "white")
# colour the points for setosa
points(iris_data[iris_data$Species == "setosa", "Sepal.Width"] ~
iris_data[iris_data$Species == "setosa", "Sepal.Length"],
col = "cyan3",
pch = 16)
# colour the points for versicolor
points(iris_data[iris_data$Species == "versicolor", "Sepal.Width"] ~
iris_data[iris_data$Species == "versicolor", "Sepal.Length"],
col = "grey",
pch = 16)
# colour the points for virginica
points(iris_data[iris_data$Species == "virginica", "Sepal.Width"] ~
iris_data[iris_data$Species == "virginica", "Sepal.Length"],
col = "green4",
pch = 16)
abline(1.67, 0.35,
col = "cyan3",
lty = 1,
lwd = 2)
summary(mod_2)
#Set up the graph
plot(iris_data$Sepal.Width ~ iris_data$Sepal.Length,
bty = "n",
xlab = "Sepal Length",
ylab = "Sepal Width",
col = "white")
# colour the points for setosa
points(iris_data[iris_data$Species == "setosa", "Sepal.Width"] ~
iris_data[iris_data$Species == "setosa", "Sepal.Length"],
col = "cyan3",
pch = 16)
# colour the points for versicolor
points(iris_data[iris_data$Species == "versicolor", "Sepal.Width"] ~
iris_data[iris_data$Species == "versicolor", "Sepal.Length"],
col = "grey",
pch = 16)
# colour the points for virginica
points(iris_data[iris_data$Species == "virginica", "Sepal.Width"] ~
iris_data[iris_data$Species == "virginica", "Sepal.Length"],
col = "green4",
pch = 16)
#fit the line for setosa
abline(1.67, 0.35,
col = "cyan3",
lty = 1,
lwd = 2)
#fit the line for versicolor
abline(1.67 -0.98, 0.35,
col = "grey",
lty = 1,
lwd = 2)
#fit the line for virginica
abline(1.67 -1.01, 0.35,
col = "green4",
lty = 1,
lwd = 2)
mod_3 <- lm(Sepal.Width ~ Sepal.Length + Species + Sepal.Length:Species,
data = iris_data)
summary(mod_3)
#Set up the graph
plot(iris_data$Sepal.Width ~ iris_data$Sepal.Length,
bty = "n",
xlab = "Sepal Length",
ylab = "Sepal Width",
col = "white")
# colour the points for setosa
points(iris_data[iris_data$Species == "setosa", "Sepal.Width"] ~
iris_data[iris_data$Species == "setosa", "Sepal.Length"],
col = "cyan3",
pch = 16)
# colour the points for versicolor
points(iris_data[iris_data$Species == "versicolor", "Sepal.Width"] ~
iris_data[iris_data$Species == "versicolor", "Sepal.Length"],
col = "grey",
pch = 16)
# colour the points for virginica
points(iris_data[iris_data$Species == "virginica", "Sepal.Width"] ~
iris_data[iris_data$Species == "virginica", "Sepal.Length"],
col = "green4",
pch = 16)
#fit the line for setosa
abline(-0.56, 0.80,
col = "cyan3",
lty = 1,
lwd = 2)
#fit the line for versicolor
abline(-0.56 + 1.44, 0.80 -0.48,
col = "grey",
lty = 1,
lwd = 2)
#fit the line for virginica
abline(-0.56 + 2.02, 0.80 -0.57,
col = "green4",
lty = 1,
lwd = 2)
#R squared can also just be found at the bottom of the summary(mod_1) results.
summary(mod_1)$adj.r.squared
#R squared for model 2
summary(mod_2)$adj.r.squared
#R squared for model 3
summary(mod_3)$adj.r.squared
#AIC
AIC(mod_1)
#AICfor model 2
AIC(mod_2)
#AICfor model 3
AIC(mod_3)
mod_4 <- glm(Sepal.Width ~ Sepal.Length + Species + Sepal.Length:Species,
family = "gaussian",
data = iris_data)
summary(mod_4)
#this subsets to just woodlice
tox_data <- read.csv("tox_test.csv",
header = T,
sep = ",")
model_logistic <- glm(cbind(dead, alive) ~ dose_percent_venom,
binomial(link = logit),
data = tox_data)
predict(model_logistic,p=c(ypredicts))
predict(model_logistic,p=c(50))
predict(model_logistic,p= 0.50)
predict(model_logistic)
?predict(model_logistic)
predict(model_logistic)
dose.p
?dose.p
#the dose.p function is found in the MASS package
library(MASS)
LD50 <- dose.p(model_logistic,p=c(0.5))
1.68 – 0.98 =
1.68 – 0.98
1.68 - 0.98
1.68 – 1.01 =
1.68 - 1.01
1.44 - 0.57
0.8-0.49
-0.57 + 2.02
0.80 – 0.57
0.80-0.57
iris_data <- iris
library(MASS)
plot(iris_data$Sepal.Width ~ iris_data$Sepal.Length,
pch = 16,
bty = "n",
xlab = "Sepal Length",
ylab = "Sepal Width")
mod_1 <- lm(Sepal.Width ~ Sepal.Length,
data = iris_data)
summary(mod_1)
plot(iris_data$Sepal.Width ~ iris_data$Sepal.Length,
pch = 16,
bty = "n",
xlab = "Sepal Length",
ylab = "Sepal Width")
abline(3.42, -0.06)
plot(iris_data$Sepal.Width ~ iris_data$Sepal.Length,
bty = "n",
xlab = "Sepal Length",
ylab = "Sepal Width",
col = "white")
# colour the points for setosa
points(iris_data[iris_data$Species == "setosa", "Sepal.Width"] ~
iris_data[iris_data$Species == "setosa", "Sepal.Length"],
col = "cyan3",
pch = 16)
# colour the points for versicolor
points(iris_data[iris_data$Species == "versicolor", "Sepal.Width"] ~
iris_data[iris_data$Species == "versicolor", "Sepal.Length"],
col = "grey",
pch = 16)
# colour the points for virginica
points(iris_data[iris_data$Species == "virginica", "Sepal.Width"] ~
iris_data[iris_data$Species == "virginica", "Sepal.Length"],
col = "green4",
pch = 16)
levels(iris_data$Species)
plot(iris_data$Sepal.Width ~ iris_data$Sepal.Length,
bty = "n",
xlab = "Sepal Length",
ylab = "Sepal Width",
col = "white")
# colour the points for setosa
points(iris_data[iris_data$Species == "setosa", "Sepal.Width"] ~
iris_data[iris_data$Species == "setosa", "Sepal.Length"],
col = "cyan3",
pch = 16)
# colour the points for versicolor
points(iris_data[iris_data$Species == "versicolor", "Sepal.Width"] ~
iris_data[iris_data$Species == "versicolor", "Sepal.Length"],
col = "grey",
pch = 16)
# colour the points for virginica
points(iris_data[iris_data$Species == "virginica", "Sepal.Width"] ~
iris_data[iris_data$Species == "virginica", "Sepal.Length"],
col = "green4",
pch = 16)
abline(1.67, 0.35,
col = "cyan3",
lty = 1,
lwd = 2)
#Set up the graph
plot(iris_data$Sepal.Width ~ iris_data$Sepal.Length,
bty = "n",
xlab = "Sepal Length",
ylab = "Sepal Width",
col = "white")
# colour the points for setosa
points(iris_data[iris_data$Species == "setosa", "Sepal.Width"] ~
iris_data[iris_data$Species == "setosa", "Sepal.Length"],
col = "cyan3",
pch = 16)
# colour the points for versicolor
points(iris_data[iris_data$Species == "versicolor", "Sepal.Width"] ~
iris_data[iris_data$Species == "versicolor", "Sepal.Length"],
col = "grey",
pch = 16)
# colour the points for virginica
points(iris_data[iris_data$Species == "virginica", "Sepal.Width"] ~
iris_data[iris_data$Species == "virginica", "Sepal.Length"],
col = "green4",
pch = 16)
#fit the line for setosa
abline(1.67, 0.35,
col = "cyan3",
lty = 1,
lwd = 2)
#fit the line for versicolor
abline(1.67 -0.98, 0.35,
col = "grey",
lty = 1,
lwd = 2)
#fit the line for virginica
abline(1.67 -1.01, 0.35,
col = "green4",
lty = 1,
lwd = 2)
mod_3 <- lm(Sepal.Width ~ Sepal.Length + Species + Sepal.Length:Species,
data = iris_data)
summary(mod_3)
#Set up the graph
plot(iris_data$Sepal.Width ~ iris_data$Sepal.Length,
bty = "n",
xlab = "Sepal Length",
ylab = "Sepal Width",
col = "white")
# colour the points for setosa
points(iris_data[iris_data$Species == "setosa", "Sepal.Width"] ~
iris_data[iris_data$Species == "setosa", "Sepal.Length"],
col = "cyan3",
pch = 16)
# colour the points for versicolor
points(iris_data[iris_data$Species == "versicolor", "Sepal.Width"] ~
iris_data[iris_data$Species == "versicolor", "Sepal.Length"],
col = "grey",
pch = 16)
# colour the points for virginica
points(iris_data[iris_data$Species == "virginica", "Sepal.Width"] ~
iris_data[iris_data$Species == "virginica", "Sepal.Length"],
col = "green4",
pch = 16)
#fit the line for setosa
abline(-0.56, 0.80,
col = "cyan3",
lty = 1,
lwd = 2)
#fit the line for versicolor
abline(-0.56 + 1.44, 0.80 -0.48,
col = "grey",
lty = 1,
lwd = 2)
#fit the line for virginica
abline(-0.56 + 2.02, 0.80 -0.57,
col = "green4",
lty = 1,
lwd = 2)
#R squared can also just be found at the bottom of the summary(mod_1) results.
summary(mod_1)$adj.r.squared
#R squared for model 2
summary(mod_2)$adj.r.squared
summary(mod_2)
mod_2 <- lm(Sepal.Width ~ Sepal.Length + Species,
data = iris_data)
summary(mod_2)
plot(iris_data$Sepal.Width ~ iris_data$Sepal.Length,
bty = "n",
xlab = "Sepal Length",
ylab = "Sepal Width",
col = "white")
# colour the points for setosa
points(iris_data[iris_data$Species == "setosa", "Sepal.Width"] ~
iris_data[iris_data$Species == "setosa", "Sepal.Length"],
col = "cyan3",
pch = 16)
# colour the points for versicolor
points(iris_data[iris_data$Species == "versicolor", "Sepal.Width"] ~
iris_data[iris_data$Species == "versicolor", "Sepal.Length"],
col = "grey",
pch = 16)
# colour the points for virginica
points(iris_data[iris_data$Species == "virginica", "Sepal.Width"] ~
iris_data[iris_data$Species == "virginica", "Sepal.Length"],
col = "green4",
pch = 16)
abline(1.67, 0.35,
col = "cyan3",
lty = 1,
lwd = 2)
summary(mod_2)
#R squared can also just be found at the bottom of the summary(mod_1) results.
summary(mod_1)$adj.r.squared
#R squared for model 2
summary(mod_2)$adj.r.squared
#R squared for model 3
summary(mod_3)$adj.r.squared
#AIC
AIC(mod_1)
#AICfor model 2
AIC(mod_2)
#AICfor model 3
AIC(mod_3)
mod_4 <- glm(Sepal.Width ~ Sepal.Length + Species + Sepal.Length:Species,
family = "gaussian",
data = iris_data)
summary(mod_4)
#the dose.p function is found in the MASS package
# The p=c(0.5) part asks for the value on the x-axis when the value is 0.5
# on the y-axis. Here 0.5 means 50% chance of mortality.
LD50 <- dose.p(model_logistic,p=c(0.5))
model_logistic <- glm(dead ~ dose_percent_venom,
binomial(link = logit),
data = tox_data)
#this subsets to just woodlice
tox_data <- read.csv("tox_test.csv",
header = T,
sep = ",")
model_logistic <- glm(dead ~ dose_percent_venom,
binomial(link = logit),
data = tox_data)
#this just generates a sequence of numbers
ypredicts <- seq(0, 1, 0.01)
xpredicts <- dose.p(model_logistic,p=c(ypredicts))
plot(dead ~ dose_percent_venom,
ylab = "Probability of death",
xlab = "Dosage (% of crude venom)",
pch = 16,
data = tox_data)
lines(unlist(xpredicts), ypredicts)
#the dose.p function is found in the MASS package
# The p=c(0.5) part asks for the value on the x-axis when the value is 0.5
# on the y-axis. Here 0.5 means 50% chance of mortality.
LD50 <- dose.p(model_logistic,p=c(0.5))
mod_3 <- lm(Pepal.Width ~ Sepal.Length + Species + Sepal.Length:Species,
data = iris_data)
mod_3 <- lm(Petal.Width ~ Sepal.Length + Species + Sepal.Length:Species,
data = iris_data)
summary(mod_3)
levels(iris_data$Species)
-0.17022 + 0.03827
-0.17 + 0.04
0.08314 + 0.04
0.08 + 0.04
pet_3 <- lm(Petal.Width ~ Petal.Length + Species + Petal.Length:Species,
data = iris_data)
summary(pet_3)
pet_2 <- lm(Petal.Width ~ Petal.Length + Species,
data = iris_data)
summary(pet_2)
aic(pet_2)
AIC(pet_2)
AIC(pet_3)
dev.new()
pet_1 <- lm(Petal.Width ~ Petal.Length,
data = iris_data)
AIC(pet_1)
explanitory
LD50 <- dose.p(model_logistic,p=c(0.5))
LD50 <- dose.p(model_logistic,p=c(0.1))
LD50
LD50 <- dose.p(model_logistic,p=c(0.1))
LD50 <- dose.p(model_logistic,p=c(0.5))
LD50
dev.new()
plot(iris_data$Petal.Width ~ iris_data$Petal.Length,
bty = "n",
xlab = "Sepal Length",
ylab = "Sepal Width",
col = "red")
points(iris_data[iris_data$Species == "setosa", "Petal.Width"] ~
iris_data[iris_data$Species == "setosa", "Petal.Length"],
col = "cyan3",
pch = 16)
# colour the points for versicolor
points(iris_data[iris_data$Species == "versicolor", "Petal.Width"] ~
iris_data[iris_data$Species == "versicolor", "Petal.Length"],
col = "grey",
pch = 16)
# colour the points for virginica
points(iris_data[iris_data$Species == "virginica", "Petal.Width"] ~
iris_data[iris_data$Species == "virginica", "Petal.Length"],
col = "green4",
pch = 16)
summary(pet_3)
0.08+0.04
0.004*3000 + 26.9
0.004*3000 + 26.9
18/19
13/19
6/7
